using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace ProjectMiro.Framework
{
    public class EmbedItemData
    {
        /// <summary>
        /// The <seealso cref="contentType"/> type of the embedded content, as returned by the content provider.
        /// </summary>
        public ContentType contentType { get; set; }

        /// <summary>
        /// A text extract providing a short description of the embedded content, as returned by the content provider.
        /// </summary>
        public string description { get; set; }

        /// <summary>
        /// The HTML with the iFrame containing the embedded content, as generated by the Embedly service.
        /// </summary>
        public string html { get; set; }

        /// <summary>
        /// The name of the content provider.
        /// For example: YouTube, Vimeo, Imgur.
        /// </summary>
        public string providerName { get; set; }

        /// <summary>
        /// The base URL associated with the content provider.
        /// </summary>
        /// <returns>Example: https://www.youtube.com/</returns>>

        public Uri providerUrl { get; set; }

        /// <summary>
        /// URL of the image to be used as the thumbnail image for the embedded item
        /// </summary>
        public Uri thumbnailUrl { get; set; }

        /// <summary>
        /// The title of the embedded content, as returned by the content provider.
        /// </summary>
        public string title { get; set; }

        /// <summary>
        /// A valid URL pointing to the content resource that you want to embed.
        /// This is the URL that you pass when you send a REST API request to embed external content in a board.
        /// Possible transport protocols:
        /// - HTTP,
        /// - HTTPS.
        /// </summary>
        public Uri url { get; set; }

        /// <summary>
        /// Defines the embed item view.
        /// </summary>
        public EmbedView view { get; set; } = EmbedView.inline;

    }
}
